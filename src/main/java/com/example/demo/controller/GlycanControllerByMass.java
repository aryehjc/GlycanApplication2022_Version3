package com.example.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;

import com.example.demo.domain.Glycan;
import com.example.demo.service.GlycanService;
import java.util.*;
import org.springframework.data.domain.Page;
import org.springframework.data.repository.query.Param;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;


@Controller // This means that this class is a Controller
public class GlycanControllerByMass {

	@Autowired
	// This means to get the bean which is auto-generated by Spring
	// We will use an glycanService for each
	GlycanService glycanService;

	//	display list of glycans
	 @RequestMapping(value = "/MySQLTableForGlycansAndCCSByMass", method = RequestMethod.POST)
	// This means that this method will be executed when user sends GET Requests to "/"
	// In our case, "http://localhost:8080/"
	public String viewHomePage(@RequestParam float mass, @RequestParam float tolerance, Model model) {
		//	We can use this attribute "listGlycans" to perform server-side rendering of the HTML with using Thymeleaf.
		//	We set all glycans data to "listGlycans"
                
                System.out.println("This method is for reporting all glycans in the SQL database");
                System.out.println("Mass was correctly passed to java: " + mass);
                System.out.println("Mass was correctly passed to java: " + tolerance);
        
        
                float lowermass = mass - tolerance;
                float uppermass = mass + tolerance;
                System.out.println("Now I will filter repository by mass in the range: " + lowermass + " - " + uppermass);
        
                String keyword = null;
                return listByPage(model, 1, "id", "asc", keyword, uppermass, lowermass);


		//		shows the index.html template:
		// return "index";
	}
        


        
        //@GetMapping("/MySQLTableForGlycansAndCCSByMass/{pageNumber}")
        @RequestMapping(value = "/MySQLTableForGlycansAndCCSByMass/{pageNumber}",  method = RequestMethod.POST)
        public String listByPage(Model model,
                @PathVariable("pageNumber") int currentPage,
                @Param("sortField") String sortField,
                @Param("sortDir") String sortDir,
                @Param("keyword") String keyword, 
                float upper, 
                float lower) {
            
            Page<Glycan> page = glycanService.listAllByMassFilter(currentPage, sortField, sortDir, keyword, upper, lower);
            
            List<Glycan> listGlycans = page.getContent(); 
            
            model.addAttribute("currentPage", currentPage);
            model.addAttribute("totalPages", page.getTotalPages());
            model.addAttribute("totalItems", page.getTotalElements());
            
            model.addAttribute("sortField", sortField);
            model.addAttribute("sortDir", sortDir);
            model.addAttribute("keyword", keyword);
            
            model.addAttribute("reverseSortDir", sortDir.equals("asc") ? "desc" : "asc");
            
            model.addAttribute("listGlycans", listGlycans);
            
            return "index";
            
        }

	


}
